//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.12.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace stoktakip.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	internal static class PersistenceInfoProviderSingleton
	{
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton() {	}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal partial class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitCategoryEntityMappings();
			InitProductEntityMappings();
			InitStockTransactionEntityMappings();
		}

		/// <summary>Inits CategoryEntity's mappings</summary>
		private void InitCategoryEntityMappings()
		{
			this.AddElementMapping("CategoryEntity", @"stok_takip", @"public", "category", 2, 0);
			this.AddElementFieldMapping("CategoryEntity", "Id", "id", false, "Integer", 0, 10, 0, true, "public.category_id_seq", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CategoryEntity", "Name", "name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits ProductEntity's mappings</summary>
		private void InitProductEntityMappings()
		{
			this.AddElementMapping("ProductEntity", @"stok_takip", @"public", "product", 6, 0);
			this.AddElementFieldMapping("ProductEntity", "CategoryId", "category_id", false, "Integer", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ProductEntity", "Id", "id", false, "Integer", 0, 10, 0, true, "public.product_id_seq", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ProductEntity", "Name", "name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("ProductEntity", "PurchasePrice", "purchase_price", false, "Numeric", 0, 10, 2, false, "", null, typeof(System.Decimal), 3);
			this.AddElementFieldMapping("ProductEntity", "SalePrice", "sale_price", false, "Numeric", 0, 10, 2, false, "", null, typeof(System.Decimal), 4);
			this.AddElementFieldMapping("ProductEntity", "StockAmount", "stock_amount", false, "Integer", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
		}

		/// <summary>Inits StockTransactionEntity's mappings</summary>
		private void InitStockTransactionEntityMappings()
		{
			this.AddElementMapping("StockTransactionEntity", @"stok_takip", @"public", "stock_transaction", 6, 0);
			this.AddElementFieldMapping("StockTransactionEntity", "Amount", "amount", false, "Integer", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("StockTransactionEntity", "Description", "description", true, "Varchar", 255, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("StockTransactionEntity", "Id", "id", false, "Integer", 0, 10, 0, true, "public.stock_transaction_id_seq", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("StockTransactionEntity", "ProductId", "product_id", false, "Integer", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("StockTransactionEntity", "TransactionDate", "transaction_date", false, "Timestamp", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("StockTransactionEntity", "TransactionType", "transaction_type", false, "Smallint", 0, 5, 0, false, "", null, typeof(System.Int16), 5);
		}

	}
}
