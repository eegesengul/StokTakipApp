//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.12.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using stoktakip.FactoryClasses;
using stoktakip.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace stoktakip.HelperClasses
{
	/// <summary>Singleton implementation of the ModelInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	public static class ModelInfoProviderSingleton
	{
		private static readonly IModelInfoProvider _providerInstance = new ModelInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static ModelInfoProviderSingleton()	{ }

		/// <summary>Gets the singleton instance of the ModelInfoProviderCore</summary>
		/// <returns>Instance of the FieldInfoProvider.</returns>
		public static IModelInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the ModelInfoProvider.</summary>
	internal class ModelInfoProviderCore : ModelInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="ModelInfoProviderCore"/> class.</summary>
		internal ModelInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores.</summary>
		private void Init()
		{
			this.InitClass();
			InitCategoryEntityInfo();
			InitProductEntityInfo();
			InitStockTransactionEntityInfo();
			this.BuildInternalStructures();
		}

		/// <summary>Inits CategoryEntity's info objects</summary>
		private void InitCategoryEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(CategoryFieldIndex), "CategoryEntity");
			this.AddElementFieldInfo("CategoryEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)CategoryFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("CategoryEntity", "Name", typeof(System.String), false, false, false, false,  (int)CategoryFieldIndex.Name, 100, 0, 0);
		}

		/// <summary>Inits ProductEntity's info objects</summary>
		private void InitProductEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(ProductFieldIndex), "ProductEntity");
			this.AddElementFieldInfo("ProductEntity", "CategoryId", typeof(System.Int32), false, true, false, false,  (int)ProductFieldIndex.CategoryId, 0, 0, 10);
			this.AddElementFieldInfo("ProductEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)ProductFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("ProductEntity", "Name", typeof(System.String), false, false, false, false,  (int)ProductFieldIndex.Name, 100, 0, 0);
			this.AddElementFieldInfo("ProductEntity", "PurchasePrice", typeof(System.Decimal), false, false, false, false,  (int)ProductFieldIndex.PurchasePrice, 0, 2, 10);
			this.AddElementFieldInfo("ProductEntity", "SalePrice", typeof(System.Decimal), false, false, false, false,  (int)ProductFieldIndex.SalePrice, 0, 2, 10);
			this.AddElementFieldInfo("ProductEntity", "StockAmount", typeof(System.Int32), false, false, false, false,  (int)ProductFieldIndex.StockAmount, 0, 0, 10);
		}

		/// <summary>Inits StockTransactionEntity's info objects</summary>
		private void InitStockTransactionEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(StockTransactionFieldIndex), "StockTransactionEntity");
			this.AddElementFieldInfo("StockTransactionEntity", "Amount", typeof(System.Int32), false, false, false, false,  (int)StockTransactionFieldIndex.Amount, 0, 0, 10);
			this.AddElementFieldInfo("StockTransactionEntity", "Description", typeof(System.String), false, false, false, true,  (int)StockTransactionFieldIndex.Description, 255, 0, 0);
			this.AddElementFieldInfo("StockTransactionEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)StockTransactionFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("StockTransactionEntity", "ProductId", typeof(System.Int32), false, true, false, false,  (int)StockTransactionFieldIndex.ProductId, 0, 0, 10);
			this.AddElementFieldInfo("StockTransactionEntity", "TransactionDate", typeof(System.DateTime), false, false, false, false,  (int)StockTransactionFieldIndex.TransactionDate, 0, 0, 0);
			this.AddElementFieldInfo("StockTransactionEntity", "TransactionType", typeof(System.Int16), false, false, false, false,  (int)StockTransactionFieldIndex.TransactionType, 0, 0, 5);
		}
	}
}